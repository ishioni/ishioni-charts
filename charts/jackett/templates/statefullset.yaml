apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "jackett.fullname" . }}
  labels:
{{ include "jackett.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jackett.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "jackett.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jackett.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "jackett.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PUID
            value: "{{ .Values.jackett.PUID }}"
          - name: PGID
            value: "{{ .Values.jackett.PGID }}"
          - name: TZ
            value: {{ .Values.jackett.timeZone }}
          {{- if .Values.jackett.runOpts }}
          - name: RUN_OPTS
            value: {{ .Values.jackett.runOpts }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9117
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /UI/Login
              port: http
          readinessProbe:
            httpGet:
              path: /UI/Login
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: /config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      {{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
      {{- end }}
      {{- if (and .Values.persistence.enabled .Values.persistence.existingClaim)}}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim)}}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: {{ include "jackett.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.persistence.annotations }}
      annotations:
    {{ toYaml .Values.persistence.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
    {{- end }}
    {{- end }}
  {{- end -}}
