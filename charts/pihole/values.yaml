# Default values for pihole.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

dns:
  config:
  policy:

image:
  repository: pihole/pihole
  tag: v4.4
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  externalTrafficPolicy: Local
  type: ClusterIP
  loadBalancerIP:
  dns:
    port: 53
  http:
    port: 80
  https:
    port: 443

pihole:
  tz: UTC
  # Unfortunately the config for upstream DNS in the web interface is useless
  # with this docker container. Unless DNS1/2 are set, it will overwrite with
  # 8.8.8.8/8.8.4.4
  dns1: 8.8.8.8
  dns2: 8.8.4.4
  # Unless you set a password, it will be autogenerated
  password:
  whitelist: []
  # Set If you know ahead of time what will be the publically accessible ip
  # ahead of time. This will allow you to access the webiface via pi.hole
  serverIP:
  vhost:
  #customConfig: |


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: ['/']
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: false
  annotations: {}
  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  accessMode: ReadWriteOnce
  size: 1Gi

livenessProbe: {}
  # exec:
  #   command:
  #   - "dig"
  #   - "+time=1"
  #   - "+tries=1"
  #   - "@127.0.0.1"
  #   - "localhost"
  # initialDelaySeconds: 10
  # periodSeconds: 30
  # timeoutSeconds: 5
  # successThreshold: 1
  # failureThreshold: 3

readinessProbe: {}
  # exec:
  #   command:
  #   - "dig"
  #   - "+time=1"
  #   - "+tries=1"
  #   - "@127.0.0.1"
  #   - "localhost"
  # initialDelaySeconds: 10
  # periodSeconds: 30
  # timeoutSeconds: 5
  # successThreshold: 1
  # failureThreshold: 3
