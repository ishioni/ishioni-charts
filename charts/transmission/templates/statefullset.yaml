apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "transmission.fullname" . }}
  labels:
{{ include "transmission.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "transmission.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "transmission.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "transmission.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PUID
            value: "{{ .Values.transmission.PUID }}"
          - name: PGID
            value: "{{ .Values.transmission.PGID }}"
          - name: TZ
            value: {{ .Values.transmission.timeZone }}
          {{- if .Values.transmission.webHome }}
          - name: TRANSMISSION_WEB_HOME
            value: {{ .Values.transmission.webHome }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9091
              protocol: TCP
            - name: utp-tcp
              containerPort: {{ .Values.service.peerPort.port }}
              protocol: TCP
            - name: utp-udp
              containerPort: {{ .Values.service.peerPort.port }}
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /transmission/web/
              port: http
          readinessProbe:
            httpGet:
              path: /transmission/web/
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: /config
          - name: settings
            mountPath: /config/settings.json
            subPath: settings.json
          - name: data
            mountPath: /downloads
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      {{- if not .Values.persistence.config.enabled }}
      - name: config
        emptyDir: {}
      {{- end }}
      {{- if ( and .Values.persistence.config.enabled .Values.persistence.config.existingClaim ) }}
      - name: config
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.config.existingClaim }}
      {{- end }}
      {{- if not .Values.persistence.data.enabled }}
      - name: data
        emptyDir: {}
      {{- else if .Values.persistence.data.enabled }}
      {{- if (and ( eq .Values.persistence.data.type "pvc" ) .Values.persistence.data.existingClaim ) }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.data.existingClaim}}
      {{- end }}
      {{- if ( eq .Values.persistence.data.type "hostPath" ) }}
      - name: data
        hostPath:
          path: {{ .Values.persistence.data.hostPath }}
          type: {{ .Values.persistence.data.hostPathType }}
      {{- end }}
      {{- end }}
      - name: settings
        configMap:
          name: {{ template "transmission.fullname" . }}-settings
          defaultMode: 0444
  volumeClaimTemplates:
  {{- if and .Values.persistence.config.enabled ( not .Values.persistence.config.existingClaim ) }}
  - metadata:
      name: config
      labels:
        app.kubernetes.io/name: {{ include "transmission.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.persistence.config.annotations  }}
      annotations:
    {{ toYaml .Values.persistence.config.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.persistence.config.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.persistence.config.size | quote }}
      {{- if .Values.persistence.config.storageClass }}
      {{- if (eq "-" .Values.persistence.config.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.persistence.config.storageClass | quote }}
      {{- end }}
      {{- end }}
  {{- end }}
  {{- if and .Values.persistence.data.enabled ( not .Values.persistence.data.existingClaim ) ( eq .Values.persistence.data.type "pvc" ) }}
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: {{ include "transmission.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.persistence.data.annotations  }}
      annotations:
    {{ toYaml .Values.persistence.data.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.persistence.data.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.persistence.data.size | quote }}
      {{- if .Values.persistence.data.storageClass }}
      {{- if (eq "-" .Values.persistence.data.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.persistence.data.storageClass | quote }}
      {{- end }}
      {{- end }}
  {{- end }}
