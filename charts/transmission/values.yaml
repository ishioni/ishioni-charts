# Default values for transmission.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: linuxserver/transmission
  tag: 2.94-r2-ls46
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

transmission:
  ## Transmission UID
  PUID: "1000"

  ## Transmission GID
  PGID: "1000"

  ## Timezone
  timeZone: "Europe/London"

  ## Alternative UI (Optional)
  ## Choose between /combustion-release/, /transmission-web-control/ and /kettu/
  # webHome: "/combustion-release/"

  blocklistUrl: ""
  rpcPassword: "mySuperSecretPassword"

  # Put the contents of settings.json here
  # customConfig: |-
  #   {
  #     "alt-speed-down": 50,
  #   }

## Persistence options
persistence:
  config:
    enabled: false
    annotations: {}

    ## transmission config dir Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.config.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim: config

    accessMode: ReadWriteOnce
    size: 100Mi

  data:
    enabled: false
    annotations: {}

    ## If persistence.data.enabled is true you can choose
    ##   between using a PVC to store your data, or a hostPath
    ## Valid choices are either pvc or hostPath
    ## If you are planning to integrate transmission with
    ##   other media applications, hostPath is the one you want
    ## Each has different options
    type: "pvc"
    ## transmission data dir Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.data.enabled: true and
    ## persistence.data.type: "pvc"
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim: data

    ## Host path for persistence.data.type: "hostPath"
    hostPath: "/media/data"
    ## This directory must exist on the host. It can be created for you,
    ##   if you change this to DirectoryOrCreate
    hostPathType: Directory

    accessMode: ReadWriteOnce
    size: 1Gi

service:
  annotations: {}
  type: ClusterIP
  port: 80

  peerPort:
    annotations: {}
    type: ClusterIP
    # loadBalancerIP:
    # loadBalancerSourceRanges:
    # externalIPs:
    # externalTrafficPolicy:
    ## Kubernetes by default has a range 30000-32767, be wary when using NodePort
    port: 31000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
