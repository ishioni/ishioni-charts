apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "unifi.fullname" . }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ include "unifi.name" . }}
    helm.sh/chart: {{ include "unifi.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "unifi.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "unifi.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "unifi.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      containers:
        {{- if .Values.mongodb.enabled }}
        - name: mongo
          image: mongo:3.4
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - --wiredTigerCacheSizeGB
          - {{ .Values.mongodb.cacheSizeGB | quote }}
          ports:
          - name: mongo
            containerPort: 27017
            protocol: TCP
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
{{ toYaml .Values.mongodb.resources | indent 12 }}
          volumeMounts:
          - name: mongo
            mountPath: /data/db
            subPath: db
        {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: stun
              containerPort: 3478
              protocol: UDP
            - name: syslog
              containerPort: 5514
              protocol: UDP
            - name: controller
              containerPort: 8080
              protocol: TCP
            - name: https-gui
              containerPort: 8443
              protocol: TCP
            - name: discovery
              containerPort: 10001
              protocol: UDP
              {{ if .Values.captivePortalService.enabled }}
            - name: captive-http
              containerPort: 8880
              protocol: TCP
            - name: captive-https
              containerPort: 8843
              protocol: TCP
              {{ end }}
          {{- if not .Values.runAsRoot }}
          securityContext:
            capabilities:
              add:
                - SETFCAP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /status
              port: https-gui
              scheme: HTTPS
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /status
              port: https-gui
              scheme: HTTPS
            initialDelaySeconds: 15
          env:
            - name: TZ
              value: "{{ .Values.timezone }}"
            - name: RUNAS_UID0
              value: "{{ .Values.runAsRoot }}"
            - name: RUN_CHOWN
              value: "{{ .Values.runChown }}"
            - name: PUID
              value: "{{ .Values.UID }}"
            - name: PGID
              value: "{{ .Values.GID }}"
            {{- if .Values.extraJvmOpts }}
            - name: JVM_EXTRA_OPTS
              value: "{{- join " " .Values.extraJvmOpts }}"
            {{- end }}
            - name: JVM_INIT_HEAP_SIZE
              value: "{{ .Values.jvmInitHeapSize }}"
            - name: JVM_MAX_HEAP_SIZE
              value: "{{ .Values.jvmMaxHeapSize }}"
            {{- if .Values.mongodb.enabled }}
            - name: DB_MONGO_LOCAL
              value: "false"
            - name: DB_MONGO_URI
              value: "mongodb://localhost/unifi"
            - name: STATDB_MONGO_URI
              value: "mongodb://localhost/unifi_stat"
            - name: UNIFI_DB_NAME
              value: "unifi"
            {{- end }}
          volumeMounts:
            - mountPath: /usr/lib/unifi/data
              name: data
              subPath: data
            - mountPath: /usr/lib/unifi/logs
              name: data
              subPath: logs
            - mountPath: /usr/lib/unifi/cert
              name: data
              subPath: cert
            {{- if .Values.extraConfigFiles }}
            - name: extra-config
              mountPath: /configmap
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        {{- if and (not .Values.mongodb.persistence.enabled ) .Values.mongodb.enabled }}
        - name: mongo
          emptyDir: {}
        {{- end }}
        {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- end }}
        {{- if and .Values.mongodb.persistence.enabled .Values.mongodb.persistence.existingClaim }}
        - name: mongo
          persistentVolumeClaim:
            claimName: {{ .Values.mongodb.persistence.existingClaim }}
        {{- end }}
        {{- if .Values.extraConfigFiles }}
        - name: extra-config
          configMap:
            name: {{ template "unifi.fullname" . }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  volumeClaimTemplates:
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim)}}
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: {{ include "unifi.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.persistence.annotations }}
      annotations:
    {{ toYaml .Values.persistence.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
    {{- end }}
    {{- end }}
  {{- end -}}
  {{- if .Values.mongodb.enabled }}
  {{- if and .Values.mongodb.persistence.enabled (not .Values.mongodb.persistence.existingClaim)}}
  - metadata:
      name: mongo
      labels:
        app.kubernetes.io/name: {{ include "unifi.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.mongodb.persistence.annotations }}
      annotations:
    {{ toYaml .Values.mongodb.persistence.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.mongodb.persistence.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.mongodb.persistence.size | quote }}
    {{- if .Values.mongodb.persistence.storageClass }}
    {{- if (eq "-" .Values.mongodb.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.mongodb.persistence.storageClass | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
